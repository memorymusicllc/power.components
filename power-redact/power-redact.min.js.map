{
  "version": 3,
  "sources": ["main-source.js"],
  "sourcesContent": ["\n/**\n * Power Redact Plugin v2.0 - Complete UX Overhaul\n * Enhanced reveal behavior with cursor-based interaction\n * Touch device support and iOS Format menu integration\n */\n\nclass PowerRedactPlugin {\n    constructor() {\n        this.version = '2.0.0';\n        this.settings = {\n            enabled: true,\n            autoRedactPII: true,\n            customPatterns: [],\n            excludeTerms: [],\n            revealBehavior: 'cursor', // cursor, click, hover\n            blockStyle: true,\n            touchSupport: true\n        };\n        \n        this.redactedElements = new Set();\n        this.isTouch = 'ontouchstart' in window;\n        this.currentRevealedElement = null;\n        this.settingsPanel = null;\n        \n        this.init();\n    }\n    \n    init() {\n        this.loadSettings();\n        this.createStyles();\n        this.setupEventListeners();\n        this.integrateWithFormatMenu();\n        \n        if (this.settings.enabled) {\n            this.startAutoRedaction();\n        }\n    }\n    \n    loadSettings() {\n        const saved = localStorage.getItem('power-redact-settings');\n        if (saved) {\n            this.settings = { ...this.settings, ...JSON.parse(saved) };\n        }\n    }\n    \n    saveSettings() {\n        localStorage.setItem('power-redact-settings', JSON.stringify(this.settings));\n    }\n    \n    createStyles() {\n        const style = document.createElement('style');\n        style.textContent = `\n            .power-redact-hidden {\n                background: #000 !important;\n                color: transparent !important;\n                border-radius: 3px;\n                position: relative;\n                cursor: pointer;\n                user-select: none;\n                transition: all 0.2s ease;\n            }\n            \n            .power-redact-hidden.block-style {\n                display: inline-block;\n                min-width: 60px;\n                height: 1.2em;\n                vertical-align: baseline;\n            }\n            \n            .power-redact-revealed {\n                background: rgba(255, 255, 0, 0.3) !important;\n                color: inherit !important;\n                animation: reveal-pulse 0.3s ease;\n            }\n            \n            .power-redact-touch-lock::after {\n                content: '\uD83D\uDD12';\n                position: absolute;\n                right: -20px;\n                top: 50%;\n                transform: translateY(-50%);\n                font-size: 0.8em;\n                opacity: 0.7;\n            }\n            \n            @keyframes reveal-pulse {\n                0% { background: rgba(255, 255, 0, 0.6); }\n                100% { background: rgba(255, 255, 0, 0.3); }\n            }\n            \n            .power-redact-settings {\n                position: fixed;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                background: white;\n                border: 2px solid #333;\n                border-radius: 8px;\n                padding: 20px;\n                box-shadow: 0 4px 20px rgba(0,0,0,0.3);\n                z-index: 10000;\n                max-width: 400px;\n                width: 90%;\n                max-height: 80vh;\n                overflow-y: auto;\n            }\n            \n            .power-redact-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0,0,0,0.5);\n                z-index: 9999;\n            }\n            \n            .settings-section {\n                margin-bottom: 20px;\n                padding-bottom: 15px;\n                border-bottom: 1px solid #eee;\n            }\n            \n            .settings-section:last-child {\n                border-bottom: none;\n                margin-bottom: 0;\n            }\n            \n            .settings-section h3 {\n                margin: 0 0 10px 0;\n                font-size: 16px;\n                color: #333;\n            }\n            \n            .toggle-switch {\n                position: relative;\n                display: inline-block;\n                width: 50px;\n                height: 24px;\n                margin-left: 10px;\n            }\n            \n            .toggle-switch input {\n                opacity: 0;\n                width: 0;\n                height: 0;\n            }\n            \n            .toggle-slider {\n                position: absolute;\n                cursor: pointer;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: #ccc;\n                transition: .4s;\n                border-radius: 24px;\n            }\n            \n            .toggle-slider:before {\n                position: absolute;\n                content: \"\";\n                height: 18px;\n                width: 18px;\n                left: 3px;\n                bottom: 3px;\n                background-color: white;\n                transition: .4s;\n                border-radius: 50%;\n            }\n            \n            input:checked + .toggle-slider {\n                background-color: #2196F3;\n            }\n            \n            input:checked + .toggle-slider:before {\n                transform: translateX(26px);\n            }\n            \n            .advanced-accordion {\n                border: 1px solid #ddd;\n                border-radius: 4px;\n                margin-top: 10px;\n            }\n            \n            .advanced-header {\n                background: #f5f5f5;\n                padding: 10px;\n                cursor: pointer;\n                user-select: none;\n                border-radius: 4px 4px 0 0;\n            }\n            \n            .advanced-content {\n                padding: 15px;\n                display: none;\n            }\n            \n            .advanced-content.open {\n                display: block;\n            }\n            \n            .pattern-list {\n                max-height: 120px;\n                overflow-y: auto;\n                border: 1px solid #ddd;\n                border-radius: 4px;\n                padding: 5px;\n                margin-top: 5px;\n            }\n            \n            .pattern-item {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                padding: 5px;\n                border-bottom: 1px solid #eee;\n            }\n            \n            .pattern-item:last-child {\n                border-bottom: none;\n            }\n            \n            .remove-pattern {\n                background: #ff4444;\n                color: white;\n                border: none;\n                border-radius: 3px;\n                padding: 2px 6px;\n                cursor: pointer;\n                font-size: 12px;\n            }\n            \n            @media (max-width: 480px) {\n                .power-redact-settings {\n                    width: 95%;\n                    padding: 15px;\n                }\n                \n                .toggle-switch {\n                    width: 40px;\n                    height: 20px;\n                }\n                \n                .toggle-slider:before {\n                    height: 14px;\n                    width: 14px;\n                    left: 3px;\n                    bottom: 3px;\n                }\n                \n                input:checked + .toggle-slider:before {\n                    transform: translateX(20px);\n                }\n            }\n        `;\n        document.head.appendChild(style);\n    }\n    \n    setupEventListeners() {\n        // Enhanced cursor-based reveal behavior\n        document.addEventListener('mouseover', (e) => {\n            if (!this.isTouch && e.target.classList.contains('power-redact-hidden')) {\n                this.revealElement(e.target);\n            }\n        });\n        \n        document.addEventListener('mouseleave', (e) => {\n            if (!this.isTouch && e.target.classList.contains('power-redact-hidden')) {\n                this.hideElement(e.target);\n            }\n        });\n        \n        // Touch support with edit lock\n        document.addEventListener('touchstart', (e) => {\n            if (this.isTouch && e.target.classList.contains('power-redact-hidden')) {\n                e.preventDefault();\n                this.toggleRevealTouch(e.target);\n            }\n        });\n        \n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            if (e.ctrlKey && e.shiftKey && e.key === 'R') {\n                e.preventDefault();\n                this.showSettings();\n            }\n            \n            if (e.key === 'Escape' && this.settingsPanel) {\n                this.hideSettings();\n            }\n        });\n    }\n    \n    revealElement(element) {\n        if (this.currentRevealedElement && this.currentRevealedElement !== element) {\n            this.hideElement(this.currentRevealedElement);\n        }\n        \n        element.classList.remove('power-redact-hidden');\n        element.classList.add('power-redact-revealed');\n        this.currentRevealedElement = element;\n    }\n    \n    hideElement(element) {\n        element.classList.remove('power-redact-revealed');\n        element.classList.add('power-redact-hidden');\n        \n        if (this.currentRevealedElement === element) {\n            this.currentRevealedElement = null;\n        }\n    }\n    \n    toggleRevealTouch(element) {\n        if (element.classList.contains('power-redact-revealed')) {\n            this.hideElement(element);\n            element.classList.remove('power-redact-touch-lock');\n        } else {\n            this.revealElement(element);\n            element.classList.add('power-redact-touch-lock');\n        }\n    }\n    \n    integrateWithFormatMenu() {\n        // iOS Format menu integration\n        if (this.isTouch && /iPad|iPhone|iPod/.test(navigator.userAgent)) {\n            const observer = new MutationObserver((mutations) => {\n                mutations.forEach((mutation) => {\n                    if (mutation.type === 'childList') {\n                        const formatMenu = document.querySelector('.format-menu, .editing-menu');\n                        if (formatMenu && !formatMenu.querySelector('.power-redact-option')) {\n                            this.addFormatMenuOption(formatMenu);\n                        }\n                    }\n                });\n            });\n            \n            observer.observe(document.body, { childList: true, subtree: true });\n        }\n    }\n    \n    addFormatMenuOption(menu) {\n        const redactOption = document.createElement('button');\n        redactOption.className = 'power-redact-option';\n        redactOption.textContent = 'Redact';\n        redactOption.onclick = () => {\n            const selection = window.getSelection();\n            if (selection.rangeCount > 0) {\n                this.redactSelection(selection);\n            }\n        };\n        menu.appendChild(redactOption);\n    }\n    \n    redactSelection(selection) {\n        const range = selection.getRangeAt(0);\n        const span = document.createElement('span');\n        span.className = 'power-redact-hidden';\n        \n        if (this.settings.blockStyle) {\n            span.classList.add('block-style');\n        }\n        \n        try {\n            range.surroundContents(span);\n            this.redactedElements.add(span);\n            selection.removeAllRanges();\n        } catch (e) {\n            console.warn('Could not redact complex selection:', e);\n        }\n    }\n    \n    startAutoRedaction() {\n        if (!this.settings.autoRedactPII) return;\n        \n        const piiPatterns = [\n            /\\b\\d{3}-\\d{2}-\\d{4}\\b/g, // SSN\n            /\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g, // Credit card\n            /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, // Email\n            /\\b\\d{3}[\\s.-]?\\d{3}[\\s.-]?\\d{4}\\b/g, // Phone\n        ];\n        \n        const allPatterns = [...piiPatterns, ...this.settings.customPatterns];\n        \n        this.scanAndRedact(document.body, allPatterns);\n    }\n    \n    scanAndRedact(element, patterns) {\n        const walker = document.createTreeWalker(\n            element,\n            NodeFilter.SHOW_TEXT,\n            {\n                acceptNode: (node) => {\n                    return node.parentElement.closest('.power-redact-hidden, .power-redact-settings') \n                        ? NodeFilter.FILTER_REJECT \n                        : NodeFilter.FILTER_ACCEPT;\n                }\n            }\n        );\n        \n        const textNodes = [];\n        let node;\n        while (node = walker.nextNode()) {\n            textNodes.push(node);\n        }\n        \n        textNodes.forEach(textNode => {\n            let content = textNode.textContent;\n            let modified = false;\n            \n            patterns.forEach(pattern => {\n                if (pattern instanceof RegExp) {\n                    content = content.replace(pattern, (match) => {\n                        if (this.shouldExclude(match)) return match;\n                        modified = true;\n                        return `<span class=\"power-redact-hidden${this.settings.blockStyle ? ' block-style' : ''}\">${match}</span>`;\n                    });\n                } else if (typeof pattern === 'string') {\n                    const regex = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gi');\n                    content = content.replace(regex, (match) => {\n                        if (this.shouldExclude(match)) return match;\n                        modified = true;\n                        return `<span class=\"power-redact-hidden${this.settings.blockStyle ? ' block-style' : ''}\">${match}</span>`;\n                    });\n                }\n            });\n            \n            if (modified) {\n                const wrapper = document.createElement('div');\n                wrapper.innerHTML = content;\n                \n                while (wrapper.firstChild) {\n                    textNode.parentNode.insertBefore(wrapper.firstChild, textNode);\n                }\n                textNode.remove();\n            }\n        });\n    }\n    \n    shouldExclude(text) {\n        return this.settings.excludeTerms.some(term => \n            text.toLowerCase().includes(term.toLowerCase())\n        );\n    }\n    \n    showSettings() {\n        if (this.settingsPanel) return;\n        \n        const overlay = document.createElement('div');\n        overlay.className = 'power-redact-overlay';\n        \n        const panel = document.createElement('div');\n        panel.className = 'power-redact-settings';\n        \n        panel.innerHTML = `\n            <h2>Power Redact Settings v${this.version}</h2>\n            \n            <div class=\"settings-section\">\n                <h3>Auto Redact Personally Identifiable Information</h3>\n                <label>\n                    Enable PII Auto-Redaction\n                    <label class=\"toggle-switch\">\n                        <input type=\"checkbox\" id=\"autoRedactPII\" ${this.settings.autoRedactPII ? 'checked' : ''}>\n                        <span class=\"toggle-slider\"></span>\n                    </label>\n                </label>\n            </div>\n            \n            <div class=\"settings-section\">\n                <h3>Keywords or Phrases to Redact</h3>\n                <input type=\"text\" id=\"customPattern\" placeholder=\"Enter keyword or phrase\" style=\"width: 70%; margin-right: 5px;\">\n                <button onclick=\"powerRedact.addCustomPattern()\" style=\"width: 25%;\">Add</button>\n                <div class=\"pattern-list\" id=\"customPatterns\"></div>\n            </div>\n            \n            <div class=\"advanced-accordion\">\n                <div class=\"advanced-header\" onclick=\"powerRedact.toggleAdvanced()\">\n                    <strong>\u2699\uFE0F Advanced Settings</strong>\n                </div>\n                <div class=\"advanced-content\" id=\"advancedContent\">\n                    <div class=\"settings-section\">\n                        <h3>Exclude Terms</h3>\n                        <p style=\"font-size: 12px; color: #666; margin: 5px 0;\">Terms that should NOT be redacted even if they match patterns</p>\n                        <input type=\"text\" id=\"excludeTerm\" placeholder=\"Enter term to exclude\" style=\"width: 70%; margin-right: 5px;\">\n                        <button onclick=\"powerRedact.addExcludeTerm()\" style=\"width: 25%;\">Add</button>\n                        <div class=\"pattern-list\" id=\"excludeTerms\"></div>\n                    </div>\n                    \n                    <div class=\"settings-section\">\n                        <h3>Display Options</h3>\n                        <label>\n                            <input type=\"checkbox\" id=\"blockStyle\" ${this.settings.blockStyle ? 'checked' : ''}> \n                            Block Style (recommended)\n                        </label>\n                        <br>\n                        <label>\n                            <input type=\"checkbox\" id=\"touchSupport\" ${this.settings.touchSupport ? 'checked' : ''}> \n                            Touch Device Support\n                        </label>\n                    </div>\n                </div>\n            </div>\n            \n            <div style=\"margin-top: 20px; text-align: center;\">\n                <button onclick=\"powerRedact.saveAndClose()\" style=\"background: #2196F3; color: white; border: none; padding: 10px 20px; border-radius: 4px; margin-right: 10px; cursor: pointer;\">Save & Close</button>\n                <button onclick=\"powerRedact.hideSettings()\" style=\"background: #ccc; color: black; border: none; padding: 10px 20px; border-radius: 4px; cursor: pointer;\">Cancel</button>\n            </div>\n        `;\n        \n        overlay.onclick = (e) => {\n            if (e.target === overlay) this.hideSettings();\n        };\n        \n        document.body.appendChild(overlay);\n        document.body.appendChild(panel);\n        \n        this.settingsPanel = panel;\n        this.settingsOverlay = overlay;\n        \n        this.updatePatternLists();\n    }\n    \n    hideSettings() {\n        if (this.settingsPanel) {\n            this.settingsPanel.remove();\n            this.settingsOverlay.remove();\n            this.settingsPanel = null;\n            this.settingsOverlay = null;\n        }\n    }\n    \n    toggleAdvanced() {\n        const content = document.getElementById('advancedContent');\n        content.classList.toggle('open');\n    }\n    \n    addCustomPattern() {\n        const input = document.getElementById('customPattern');\n        const pattern = input.value.trim();\n        \n        if (pattern && !this.settings.customPatterns.includes(pattern)) {\n            this.settings.customPatterns.push(pattern);\n            input.value = '';\n            this.updatePatternLists();\n        }\n    }\n    \n    addExcludeTerm() {\n        const input = document.getElementById('excludeTerm');\n        const term = input.value.trim();\n        \n        if (term && !this.settings.excludeTerms.includes(term)) {\n            this.settings.excludeTerms.push(term);\n            input.value = '';\n            this.updatePatternLists();\n        }\n    }\n    \n    removeCustomPattern(index) {\n        this.settings.customPatterns.splice(index, 1);\n        this.updatePatternLists();\n    }\n    \n    removeExcludeTerm(index) {\n        this.settings.excludeTerms.splice(index, 1);\n        this.updatePatternLists();\n    }\n    \n    updatePatternLists() {\n        const customList = document.getElementById('customPatterns');\n        const excludeList = document.getElementById('excludeTerms');\n        \n        if (customList) {\n            customList.innerHTML = this.settings.customPatterns.map((pattern, index) => `\n                <div class=\"pattern-item\">\n                    <span>${pattern}</span>\n                    <button class=\"remove-pattern\" onclick=\"powerRedact.removeCustomPattern(${index})\">\u00D7</button>\n                </div>\n            `).join('');\n        }\n        \n        if (excludeList) {\n            excludeList.innerHTML = this.settings.excludeTerms.map((term, index) => `\n                <div class=\"pattern-item\">\n                    <span>${term}</span>\n                    <button class=\"remove-pattern\" onclick=\"powerRedact.removeExcludeTerm(${index})\">\u00D7</button>\n                </div>\n            `).join('');\n        }\n    }\n    \n    saveAndClose() {\n        // Update settings from form\n        this.settings.autoRedactPII = document.getElementById('autoRedactPII').checked;\n        this.settings.blockStyle = document.getElementById('blockStyle').checked;\n        this.settings.touchSupport = document.getElementById('touchSupport').checked;\n        \n        this.saveSettings();\n        this.hideSettings();\n        \n        // Restart auto-redaction with new settings\n        if (this.settings.autoRedactPII) {\n            this.startAutoRedaction();\n        }\n    }\n    \n    // Public API methods\n    redactText(text) {\n        const span = document.createElement('span');\n        span.className = 'power-redact-hidden';\n        span.textContent = text;\n        return span;\n    }\n    \n    clearAllRedactions() {\n        document.querySelectorAll('.power-redact-hidden').forEach(el => {\n            const text = el.textContent;\n            el.replaceWith(document.createTextNode(text));\n        });\n        this.redactedElements.clear();\n    }\n    \n    exportRedactedContent() {\n        const content = document.body.cloneNode(true);\n        content.querySelectorAll('.power-redact-hidden').forEach(el => {\n            el.textContent = '\u2588'.repeat(Math.max(1, Math.floor(el.textContent.length / 2)));\n        });\n        return content.innerHTML;\n    }\n}\n\n// Initialize plugin\nconst powerRedact = new PowerRedactPlugin();\n\n// Global access for settings panel\nwindow.powerRedact = powerRedact;\n\n// Export for module systems\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = PowerRedactPlugin;\n}\n"],
  "mappings": "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",
  "names": ["require_main_source", "__commonJSMin", "exports", "module", "PowerRedactPlugin", "saved", "style", "element", "mutations", "mutation", "formatMenu", "menu", "redactOption", "selection", "range", "span", "e", "allPatterns", "patterns", "walker", "node", "textNodes", "textNode", "content", "modified", "pattern", "match", "regex", "wrapper", "text", "term", "overlay", "panel", "input", "index", "customList", "excludeList", "el", "powerRedact"]
}
