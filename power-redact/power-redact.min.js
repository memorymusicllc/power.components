/*! Power Redact Plugin v2.0.0 | MIT License | Enhanced UX Features */
var PowerRedact=(()=>{var g=(u,e)=>()=>(e||u((e={exports:{}}).exports,e),e.exports);var b=g((x,a)=>{var c=class{constructor(){this.version="2.0.0",this.settings={enabled:!0,autoRedactPII:!0,customPatterns:[],excludeTerms:[],revealBehavior:"cursor",blockStyle:!0,touchSupport:!0},this.redactedElements=new Set,this.isTouch="ontouchstart"in window,this.currentRevealedElement=null,this.settingsPanel=null,this.init()}init(){this.loadSettings(),this.createStyles(),this.setupEventListeners(),this.integrateWithFormatMenu(),this.settings.enabled&&this.startAutoRedaction()}loadSettings(){let e=localStorage.getItem("power-redact-settings");e&&(this.settings={...this.settings,...JSON.parse(e)})}saveSettings(){localStorage.setItem("power-redact-settings",JSON.stringify(this.settings))}createStyles(){let e=document.createElement("style");e.textContent=`
            .power-redact-hidden {
                background: #000 !important;
                color: transparent !important;
                border-radius: 3px;
                position: relative;
                cursor: pointer;
                user-select: none;
                transition: all 0.2s ease;
            }
            
            .power-redact-hidden.block-style {
                display: inline-block;
                min-width: 60px;
                height: 1.2em;
                vertical-align: baseline;
            }
            
            .power-redact-revealed {
                background: rgba(255, 255, 0, 0.3) !important;
                color: inherit !important;
                animation: reveal-pulse 0.3s ease;
            }
            
            .power-redact-touch-lock::after {
                content: '\u{1F512}';
                position: absolute;
                right: -20px;
                top: 50%;
                transform: translateY(-50%);
                font-size: 0.8em;
                opacity: 0.7;
            }
            
            @keyframes reveal-pulse {
                0% { background: rgba(255, 255, 0, 0.6); }
                100% { background: rgba(255, 255, 0, 0.3); }
            }
            
            .power-redact-settings {
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background: white;
                border: 2px solid #333;
                border-radius: 8px;
                padding: 20px;
                box-shadow: 0 4px 20px rgba(0,0,0,0.3);
                z-index: 10000;
                max-width: 400px;
                width: 90%;
                max-height: 80vh;
                overflow-y: auto;
            }
            
            .power-redact-overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0,0,0,0.5);
                z-index: 9999;
            }
            
            .settings-section {
                margin-bottom: 20px;
                padding-bottom: 15px;
                border-bottom: 1px solid #eee;
            }
            
            .settings-section:last-child {
                border-bottom: none;
                margin-bottom: 0;
            }
            
            .settings-section h3 {
                margin: 0 0 10px 0;
                font-size: 16px;
                color: #333;
            }
            
            .toggle-switch {
                position: relative;
                display: inline-block;
                width: 50px;
                height: 24px;
                margin-left: 10px;
            }
            
            .toggle-switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }
            
            .toggle-slider {
                position: absolute;
                cursor: pointer;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background-color: #ccc;
                transition: .4s;
                border-radius: 24px;
            }
            
            .toggle-slider:before {
                position: absolute;
                content: "";
                height: 18px;
                width: 18px;
                left: 3px;
                bottom: 3px;
                background-color: white;
                transition: .4s;
                border-radius: 50%;
            }
            
            input:checked + .toggle-slider {
                background-color: #2196F3;
            }
            
            input:checked + .toggle-slider:before {
                transform: translateX(26px);
            }
            
            .advanced-accordion {
                border: 1px solid #ddd;
                border-radius: 4px;
                margin-top: 10px;
            }
            
            .advanced-header {
                background: #f5f5f5;
                padding: 10px;
                cursor: pointer;
                user-select: none;
                border-radius: 4px 4px 0 0;
            }
            
            .advanced-content {
                padding: 15px;
                display: none;
            }
            
            .advanced-content.open {
                display: block;
            }
            
            .pattern-list {
                max-height: 120px;
                overflow-y: auto;
                border: 1px solid #ddd;
                border-radius: 4px;
                padding: 5px;
                margin-top: 5px;
            }
            
            .pattern-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 5px;
                border-bottom: 1px solid #eee;
            }
            
            .pattern-item:last-child {
                border-bottom: none;
            }
            
            .remove-pattern {
                background: #ff4444;
                color: white;
                border: none;
                border-radius: 3px;
                padding: 2px 6px;
                cursor: pointer;
                font-size: 12px;
            }
            
            @media (max-width: 480px) {
                .power-redact-settings {
                    width: 95%;
                    padding: 15px;
                }
                
                .toggle-switch {
                    width: 40px;
                    height: 20px;
                }
                
                .toggle-slider:before {
                    height: 14px;
                    width: 14px;
                    left: 3px;
                    bottom: 3px;
                }
                
                input:checked + .toggle-slider:before {
                    transform: translateX(20px);
                }
            }
        `,document.head.appendChild(e)}setupEventListeners(){document.addEventListener("mouseover",e=>{!this.isTouch&&e.target.classList.contains("power-redact-hidden")&&this.revealElement(e.target)}),document.addEventListener("mouseleave",e=>{!this.isTouch&&e.target.classList.contains("power-redact-hidden")&&this.hideElement(e.target)}),document.addEventListener("touchstart",e=>{this.isTouch&&e.target.classList.contains("power-redact-hidden")&&(e.preventDefault(),this.toggleRevealTouch(e.target))}),document.addEventListener("keydown",e=>{e.ctrlKey&&e.shiftKey&&e.key==="R"&&(e.preventDefault(),this.showSettings()),e.key==="Escape"&&this.settingsPanel&&this.hideSettings()})}revealElement(e){this.currentRevealedElement&&this.currentRevealedElement!==e&&this.hideElement(this.currentRevealedElement),e.classList.remove("power-redact-hidden"),e.classList.add("power-redact-revealed"),this.currentRevealedElement=e}hideElement(e){e.classList.remove("power-redact-revealed"),e.classList.add("power-redact-hidden"),this.currentRevealedElement===e&&(this.currentRevealedElement=null)}toggleRevealTouch(e){e.classList.contains("power-redact-revealed")?(this.hideElement(e),e.classList.remove("power-redact-touch-lock")):(this.revealElement(e),e.classList.add("power-redact-touch-lock"))}integrateWithFormatMenu(){this.isTouch&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&new MutationObserver(t=>{t.forEach(s=>{if(s.type==="childList"){let n=document.querySelector(".format-menu, .editing-menu");n&&!n.querySelector(".power-redact-option")&&this.addFormatMenuOption(n)}})}).observe(document.body,{childList:!0,subtree:!0})}addFormatMenuOption(e){let t=document.createElement("button");t.className="power-redact-option",t.textContent="Redact",t.onclick=()=>{let s=window.getSelection();s.rangeCount>0&&this.redactSelection(s)},e.appendChild(t)}redactSelection(e){let t=e.getRangeAt(0),s=document.createElement("span");s.className="power-redact-hidden",this.settings.blockStyle&&s.classList.add("block-style");try{t.surroundContents(s),this.redactedElements.add(s),e.removeAllRanges()}catch(n){console.warn("Could not redact complex selection:",n)}}startAutoRedaction(){if(!this.settings.autoRedactPII)return;let t=[...[/\b\d{3}-\d{2}-\d{4}\b/g,/\b\d{4}[\s-]?\d{4}[\s-]?\d{4}[\s-]?\d{4}\b/g,/\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/g,/\b\d{3}[\s.-]?\d{3}[\s.-]?\d{4}\b/g],...this.settings.customPatterns];this.scanAndRedact(document.body,t)}scanAndRedact(e,t){let s=document.createTreeWalker(e,NodeFilter.SHOW_TEXT,{acceptNode:o=>o.parentElement.closest(".power-redact-hidden, .power-redact-settings")?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}),n=[],h;for(;h=s.nextNode();)n.push(h);n.forEach(o=>{let r=o.textContent,l=!1;if(t.forEach(i=>{if(i instanceof RegExp)r=r.replace(i,d=>this.shouldExclude(d)?d:(l=!0,`<span class="power-redact-hidden${this.settings.blockStyle?" block-style":""}">${d}</span>`));else if(typeof i=="string"){let d=new RegExp(i.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gi");r=r.replace(d,p=>this.shouldExclude(p)?p:(l=!0,`<span class="power-redact-hidden${this.settings.blockStyle?" block-style":""}">${p}</span>`))}}),l){let i=document.createElement("div");for(i.innerHTML=r;i.firstChild;)o.parentNode.insertBefore(i.firstChild,o);o.remove()}})}shouldExclude(e){return this.settings.excludeTerms.some(t=>e.toLowerCase().includes(t.toLowerCase()))}showSettings(){if(this.settingsPanel)return;let e=document.createElement("div");e.className="power-redact-overlay";let t=document.createElement("div");t.className="power-redact-settings",t.innerHTML=`
            <h2>Power Redact Settings v${this.version}</h2>
            
            <div class="settings-section">
                <h3>Auto Redact Personally Identifiable Information</h3>
                <label>
                    Enable PII Auto-Redaction
                    <label class="toggle-switch">
                        <input type="checkbox" id="autoRedactPII" ${this.settings.autoRedactPII?"checked":""}>
                        <span class="toggle-slider"></span>
                    </label>
                </label>
            </div>
            
            <div class="settings-section">
                <h3>Keywords or Phrases to Redact</h3>
                <input type="text" id="customPattern" placeholder="Enter keyword or phrase" style="width: 70%; margin-right: 5px;">
                <button onclick="powerRedact.addCustomPattern()" style="width: 25%;">Add</button>
                <div class="pattern-list" id="customPatterns"></div>
            </div>
            
            <div class="advanced-accordion">
                <div class="advanced-header" onclick="powerRedact.toggleAdvanced()">
                    <strong>\u2699\uFE0F Advanced Settings</strong>
                </div>
                <div class="advanced-content" id="advancedContent">
                    <div class="settings-section">
                        <h3>Exclude Terms</h3>
                        <p style="font-size: 12px; color: #666; margin: 5px 0;">Terms that should NOT be redacted even if they match patterns</p>
                        <input type="text" id="excludeTerm" placeholder="Enter term to exclude" style="width: 70%; margin-right: 5px;">
                        <button onclick="powerRedact.addExcludeTerm()" style="width: 25%;">Add</button>
                        <div class="pattern-list" id="excludeTerms"></div>
                    </div>
                    
                    <div class="settings-section">
                        <h3>Display Options</h3>
                        <label>
                            <input type="checkbox" id="blockStyle" ${this.settings.blockStyle?"checked":""}> 
                            Block Style (recommended)
                        </label>
                        <br>
                        <label>
                            <input type="checkbox" id="touchSupport" ${this.settings.touchSupport?"checked":""}> 
                            Touch Device Support
                        </label>
                    </div>
                </div>
            </div>
            
            <div style="margin-top: 20px; text-align: center;">
                <button onclick="powerRedact.saveAndClose()" style="background: #2196F3; color: white; border: none; padding: 10px 20px; border-radius: 4px; margin-right: 10px; cursor: pointer;">Save & Close</button>
                <button onclick="powerRedact.hideSettings()" style="background: #ccc; color: black; border: none; padding: 10px 20px; border-radius: 4px; cursor: pointer;">Cancel</button>
            </div>
        `,e.onclick=s=>{s.target===e&&this.hideSettings()},document.body.appendChild(e),document.body.appendChild(t),this.settingsPanel=t,this.settingsOverlay=e,this.updatePatternLists()}hideSettings(){this.settingsPanel&&(this.settingsPanel.remove(),this.settingsOverlay.remove(),this.settingsPanel=null,this.settingsOverlay=null)}toggleAdvanced(){document.getElementById("advancedContent").classList.toggle("open")}addCustomPattern(){let e=document.getElementById("customPattern"),t=e.value.trim();t&&!this.settings.customPatterns.includes(t)&&(this.settings.customPatterns.push(t),e.value="",this.updatePatternLists())}addExcludeTerm(){let e=document.getElementById("excludeTerm"),t=e.value.trim();t&&!this.settings.excludeTerms.includes(t)&&(this.settings.excludeTerms.push(t),e.value="",this.updatePatternLists())}removeCustomPattern(e){this.settings.customPatterns.splice(e,1),this.updatePatternLists()}removeExcludeTerm(e){this.settings.excludeTerms.splice(e,1),this.updatePatternLists()}updatePatternLists(){let e=document.getElementById("customPatterns"),t=document.getElementById("excludeTerms");e&&(e.innerHTML=this.settings.customPatterns.map((s,n)=>`
                <div class="pattern-item">
                    <span>${s}</span>
                    <button class="remove-pattern" onclick="powerRedact.removeCustomPattern(${n})">\xD7</button>
                </div>
            `).join("")),t&&(t.innerHTML=this.settings.excludeTerms.map((s,n)=>`
                <div class="pattern-item">
                    <span>${s}</span>
                    <button class="remove-pattern" onclick="powerRedact.removeExcludeTerm(${n})">\xD7</button>
                </div>
            `).join(""))}saveAndClose(){this.settings.autoRedactPII=document.getElementById("autoRedactPII").checked,this.settings.blockStyle=document.getElementById("blockStyle").checked,this.settings.touchSupport=document.getElementById("touchSupport").checked,this.saveSettings(),this.hideSettings(),this.settings.autoRedactPII&&this.startAutoRedaction()}redactText(e){let t=document.createElement("span");return t.className="power-redact-hidden",t.textContent=e,t}clearAllRedactions(){document.querySelectorAll(".power-redact-hidden").forEach(e=>{let t=e.textContent;e.replaceWith(document.createTextNode(t))}),this.redactedElements.clear()}exportRedactedContent(){let e=document.body.cloneNode(!0);return e.querySelectorAll(".power-redact-hidden").forEach(t=>{t.textContent="\u2588".repeat(Math.max(1,Math.floor(t.textContent.length/2)))}),e.innerHTML}},m=new c;window.powerRedact=m;typeof a<"u"&&a.exports&&(a.exports=c)});return b();})();
//# sourceMappingURL=power-redact.min.js.map
