{
  "$schema": "https://pow3r.status/schemas/pow3r.config.v3.json",
  "sceneId": "PowerComponentsLibrary_v3",
  "version": "3.0.0",
  "nodes": [
    {
      "id": "node-main-dashboard",
      "type": "ui.dashboard",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "theme", "dtype": "string", "validationRule": "isOneOf:light,dark,auto" },
          { "name": "layout", "dtype": "string", "validationRule": "isOneOf:grid,list,compact" }
        ],
        "outputs": [
          { "name": "onThemeChange", "dtype": "event" },
          { "name": "onLayoutChange", "dtype": "event" }
        ]
      },
      "props": {
        "title": "Power Components Library v3",
        "subtitle": "AI-Driven Component Showcase & Transformation Engine",
        "layout": "grid",
        "theme": "dark",
        "widgets": [
          "node-component-showcase",
          "node-chart-gallery",
          "node-redux-ui-demo",
          "node-3d-visualization",
          "node-privacy-controls",
          "node-ai-workflows",
          "node-three-layer-showcase",
          "node-dropdown-component",
          "node-universal-component-container"
        ]
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-ii",
        "requiredTests": [
          {
            "description": "Verify dashboard renders with all 6 main widget sections",
            "testType": "e2e-playwright",
            "expectedOutcome": "All widget sections are visible and properly laid out in grid format"
          },
          {
            "description": "Verify theme switching works between light, dark, and auto modes",
            "testType": "e2e-playwright",
            "expectedOutcome": "Theme changes are applied immediately and persist across page reloads"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["renderTime", "errorRate", "accessibilityScore"],
          "failureCondition": "renderTime > 2000ms OR errorRate > 0.05 for 5m",
          "repairPrompt": "Main dashboard is experiencing performance issues. Render time: {renderTime}ms, Error rate: {errorRate}. Optimize component loading and error handling."
        }
      }
    },
    {
      "id": "node-component-showcase",
      "type": "ui.showcase",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "searchQuery", "dtype": "string", "validationRule": "isString" },
          { "name": "filterTags", "dtype": "array", "validationRule": "isArrayOfStrings" },
          { "name": "selectedPhase", "dtype": "string", "validationRule": "isOneOf:Phase 1,Phase 2,Core" }
        ],
        "outputs": [
          { "name": "onComponentSelect", "dtype": "event" },
          { "name": "onFilterChange", "dtype": "event" }
        ]
      },
      "props": {
        "title": "Component Showcase",
        "description": "Interactive component library with search, filtering, and live previews",
        "components": [
          {
            "id": "power-redact",
            "name": "PowerRedact",
            "version": "2.0.0",
            "category": "Privacy & Security",
            "tags": ["core", "redaction", "privacy", "pii", "mobile", "ios", "touch"],
            "phase": "Core",
            "preview": "Advanced text redaction with enhanced UX features"
          },
          {
            "id": "dashboard-card",
            "name": "DashboardCard",
            "version": "1.0.0",
            "category": "Layout",
            "tags": ["core", "layout", "container", "dashboard"],
            "phase": "Core",
            "preview": "Standardized container for dashboard widgets"
          }
        ]
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-iii",
        "requiredTests": [
          {
            "description": "Verify search functionality filters components correctly",
            "testType": "e2e-playwright",
            "expectedOutcome": "Search results update in real-time as user types"
          },
          {
            "description": "Verify component selection shows detailed preview",
            "testType": "e2e-playwright",
            "expectedOutcome": "Clicking a component displays its metadata and live preview"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["searchLatency", "filterAccuracy"],
          "failureCondition": "searchLatency > 500ms for 3m",
          "repairPrompt": "Component showcase search is slow. Latency: {searchLatency}ms. Optimize search algorithm and component indexing."
        }
      }
    },
    {
      "id": "node-chart-gallery",
      "type": "ui.gallery",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "chartType", "dtype": "string", "validationRule": "isOneOf:pie,bar,line,scatter,radar,heatmap" },
          { "name": "dataSource", "dtype": "string", "validationRule": "isValidDataSource" }
        ],
        "outputs": [
          { "name": "onChartInteraction", "dtype": "event" },
          { "name": "onDataExport", "dtype": "event" }
        ]
      },
      "props": {
        "title": "Chart Gallery",
        "description": "Comprehensive data visualization components with real-time updates",
        "charts": [
          {
            "id": "leads-chart",
            "type": "pie",
            "title": "Lead Status Distribution",
            "data": [
              { "name": "New", "value": 12, "color": "hsl(210, 100%, 70%)" },
              { "name": "Contacted", "value": 8, "color": "hsl(25, 100%, 60%)" },
              { "name": "Qualified", "value": 5, "color": "hsl(120, 50%, 60%)" },
              { "name": "Negotiating", "value": 3, "color": "hsl(330, 100%, 70%)" },
              { "name": "Scheduled", "value": 2, "color": "hsl(250, 30%, 70%)" }
            ]
          },
          {
            "id": "llm-performance-chart",
            "type": "bar",
            "title": "LLM Response Quality",
            "data": [
              { "model": "GPT-4", "accuracy": 95, "speed": 85, "cost": 70 },
              { "model": "Claude-3", "accuracy": 92, "speed": 90, "cost": 80 },
              { "model": "Gemini", "accuracy": 88, "speed": 95, "cost": 90 },
              { "model": "Llama-2", "accuracy": 82, "speed": 75, "cost": 95 }
            ]
          },
          {
            "id": "cost-analysis-chart",
            "type": "pie",
            "title": "Cost Breakdown",
            "data": [
              { "name": "Compute", "value": 45, "color": "hsl(210, 100%, 70%)" },
              { "name": "Storage", "value": 25, "color": "hsl(25, 100%, 60%)" },
              { "name": "API Calls", "value": 20, "color": "hsl(120, 50%, 60%)" },
              { "name": "Data Transfer", "value": 10, "color": "hsl(330, 100%, 70%)" }
            ]
          },
          {
            "id": "model-comparison-chart",
            "type": "radar",
            "title": "Model Comparison",
            "data": [
              { "metric": "Accuracy", "GPT4": 95, "Claude3": 92, "Gemini": 88, "Llama2": 82 },
              { "metric": "Speed", "GPT4": 85, "Claude3": 90, "Gemini": 95, "Llama2": 75 },
              { "metric": "Cost", "GPT4": 70, "Claude3": 80, "Gemini": 90, "Llama2": 95 },
              { "metric": "Safety", "GPT4": 90, "Claude3": 95, "Gemini": 85, "Llama2": 80 },
              { "metric": "Creativity", "GPT4": 95, "Claude3": 88, "Gemini": 82, "Llama2": 85 }
            ]
          }
        ]
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-iii",
        "requiredTests": [
          {
            "description": "Verify all chart types render correctly with sample data",
            "testType": "e2e-playwright",
            "expectedOutcome": "All charts display data with proper colors, labels, and interactions"
          },
          {
            "description": "Verify chart interactions (hover, click, zoom) work properly",
            "testType": "e2e-playwright",
            "expectedOutcome": "Chart tooltips, legends, and interactive elements respond correctly"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["renderTime", "dataAccuracy", "interactionLatency"],
          "failureCondition": "renderTime > 1000ms OR dataAccuracy < 0.95 for 5m",
          "repairPrompt": "Chart gallery performance degraded. Render time: {renderTime}ms, Data accuracy: {dataAccuracy}. Check data binding and rendering optimization."
        }
      }
    },
    {
      "id": "node-redux-ui-demo",
      "type": "ui.playground",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "componentProps", "dtype": "object", "validationRule": "isValidComponentProps" },
          { "name": "theme", "dtype": "string", "validationRule": "isOneOf:light,dark" }
        ],
        "outputs": [
          { "name": "onPropChange", "dtype": "event" },
          { "name": "onCodeGeneration", "dtype": "event" }
        ]
      },
      "props": {
        "title": "Redux UI Playground",
        "description": "Interactive component testing with live prop editing and code generation",
        "components": [
          {
            "id": "redux-ui-button",
            "name": "Button",
            "version": "2.0.0",
            "props": {
              "variant": "default",
              "size": "md",
              "color": "primary",
              "state": "default",
              "loading": false,
              "children": "Click Me"
            },
            "variants": {
              "variant": ["default", "outline", "ghost", "destructive", "success", "warning", "info"],
              "size": ["xs", "sm", "md", "lg", "xl"],
              "color": ["primary", "secondary", "accent", "neutral", "success", "warning", "error", "info"]
            }
          },
          {
            "id": "redux-ui-card",
            "name": "Card",
            "version": "2.0.0",
            "props": {
              "variant": "default",
              "elevation": "md",
              "padding": "md"
            },
            "variants": {
              "variant": ["default", "outline", "elevated", "flat"],
              "elevation": ["none", "sm", "md", "lg", "xl"],
              "padding": ["none", "sm", "md", "lg", "xl"]
            }
          }
        ]
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-iv",
        "requiredTests": [
          {
            "description": "Verify component prop changes update the preview in real-time",
            "testType": "e2e-playwright",
            "expectedOutcome": "Changing props in the editor immediately reflects in the component preview"
          },
          {
            "description": "Verify code generation produces valid React/TypeScript code",
            "testType": "e2e-playwright",
            "expectedOutcome": "Generated code is syntactically correct and matches the current component state"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["propUpdateLatency", "codeGenerationTime", "syntaxErrors"],
          "failureCondition": "propUpdateLatency > 200ms OR syntaxErrors > 0 for 2m",
          "repairPrompt": "Redux UI playground has performance issues. Prop update latency: {propUpdateLatency}ms, Syntax errors: {syntaxErrors}. Optimize state management and code generation."
        }
      }
    },
    {
      "id": "node-3d-visualization",
      "type": "visualization.3d",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "sceneData", "dtype": "object", "validationRule": "isValid3DScene" },
          { "name": "cameraPosition", "dtype": "object", "validationRule": "isValidCameraPosition" }
        ],
        "outputs": [
          { "name": "onNodeSelect", "dtype": "event" },
          { "name": "onSceneUpdate", "dtype": "event" }
        ]
      },
      "props": {
        "title": "3D Visualization Engine",
        "description": "Power Canvas 3D visualization with WebGL/THREE.js integration",
        "scene": {
          "nodes": [
            {
              "id": "node-1",
              "position": { "x": 0, "y": 0, "z": 0 },
              "type": "component",
              "data": { "name": "Button", "category": "UI" }
            },
            {
              "id": "node-2",
              "position": { "x": 2, "y": 1, "z": 0 },
              "type": "chart",
              "data": { "name": "Leads Chart", "category": "Data" }
            },
            {
              "id": "node-3",
              "position": { "x": -2, "y": -1, "z": 1 },
              "type": "workflow",
              "data": { "name": "AI Pipeline", "category": "Process" }
            }
          ],
          "edges": [
            {
              "from": "node-1",
              "to": "node-2",
              "type": "data-flow",
              "strength": 0.8
            },
            {
              "from": "node-2",
              "to": "node-3",
              "type": "trigger",
              "strength": 0.6
            }
          ],
          "camera": {
            "position": { "x": 5, "y": 5, "z": 5 },
            "target": { "x": 0, "y": 0, "z": 0 }
          }
        }
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-v",
        "requiredTests": [
          {
            "description": "Verify 3D scene renders with proper lighting and materials",
            "testType": "e2e-playwright",
            "expectedOutcome": "3D scene displays with correct perspective, lighting, and node positioning"
          },
          {
            "description": "Verify camera controls (pan, zoom, rotate) work smoothly",
            "testType": "e2e-playwright",
            "expectedOutcome": "Camera responds to mouse/touch interactions without lag or jitter"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["fps", "renderTime", "memoryUsage"],
          "failureCondition": "fps < 30 OR memoryUsage > 500MB for 5m",
          "repairPrompt": "3D visualization performance degraded. FPS: {fps}, Memory usage: {memoryUsage}MB. Optimize rendering pipeline and memory management."
        }
      }
    },
    {
      "id": "node-privacy-controls",
      "type": "privacy.manager",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "redactionRules", "dtype": "array", "validationRule": "isValidRedactionRules" },
          { "name": "privacyLevel", "dtype": "string", "validationRule": "isOneOf:low,medium,high,maximum" }
        ],
        "outputs": [
          { "name": "onRedactionApplied", "dtype": "event" },
          { "name": "onPrivacyViolation", "dtype": "event" }
        ]
      },
      "props": {
        "title": "Privacy & Security Controls",
        "description": "Power Redact plugin with advanced PII detection and redaction",
        "redactionConfig": {
          "autoRedactPII": true,
          "customPatterns": [
            { "name": "SSN", "pattern": "\\d{3}-\\d{2}-\\d{4}", "replacement": "[SSN]" },
            { "name": "Email", "pattern": "[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,}", "replacement": "[EMAIL]" },
            { "name": "Phone", "pattern": "\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}", "replacement": "[PHONE]" }
          ],
          "excludeTerms": ["admin", "system", "test"],
          "revealBehavior": "cursor-hover",
          "blockStyle": "solid",
          "touchSupport": true
        },
        "privacyLevels": {
          "low": { "redactEmails": false, "redactPhones": false, "redactSSN": true },
          "medium": { "redactEmails": true, "redactPhones": true, "redactSSN": true },
          "high": { "redactEmails": true, "redactPhones": true, "redactSSN": true, "redactNames": true },
          "maximum": { "redactAll": true, "customPatterns": "all" }
        }
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-vi",
        "requiredTests": [
          {
            "description": "Verify PII detection correctly identifies sensitive information",
            "testType": "e2e-playwright",
            "expectedOutcome": "Email addresses, phone numbers, and SSNs are properly detected and highlighted"
          },
          {
            "description": "Verify redaction applies correctly based on privacy level",
            "testType": "e2e-playwright",
            "expectedOutcome": "Text is redacted according to selected privacy level with proper reveal behavior"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["detectionAccuracy", "redactionSpeed", "falsePositives"],
          "failureCondition": "detectionAccuracy < 0.95 OR falsePositives > 0.05 for 10m",
          "repairPrompt": "Privacy controls accuracy degraded. Detection accuracy: {detectionAccuracy}, False positives: {falsePositives}. Review and update detection patterns."
        }
      }
    },
    {
      "id": "node-ai-workflows",
      "type": "workflow.orchestrator",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "workflowDefinition", "dtype": "object", "validationRule": "isValidWorkflow" },
          { "name": "triggerEvent", "dtype": "string", "validationRule": "isValidTrigger" }
        ],
        "outputs": [
          { "name": "onWorkflowComplete", "dtype": "event" },
          { "name": "onStepComplete", "dtype": "event" },
          { "name": "onError", "dtype": "event" }
        ]
      },
      "props": {
        "title": "AI Workflow Orchestrator",
        "description": "Automated workflow execution with AI agent integration",
        "workflows": [
          {
            "id": "content-generation-workflow",
            "name": "Content Generation Pipeline",
            "steps": [
              {
                "id": "step-1",
                "name": "Data Collection",
                "type": "ui.form",
                "component": "ItemDetailsCollector",
                "outputs": ["itemData"]
              },
              {
                "id": "step-2",
                "name": "Price Research",
                "type": "agent.service",
                "component": "PriceResearcher",
                "inputs": ["itemData"],
                "outputs": ["pricingAnalysis"]
              },
              {
                "id": "step-3",
                "name": "Content Generation",
                "type": "agent.service",
                "component": "ContentGenerator",
                "inputs": ["pricingAnalysis"],
                "outputs": ["generatedContent"]
              },
              {
                "id": "step-4",
                "name": "Quality Review",
                "type": "ai.reviewer",
                "component": "QualityReviewer",
                "inputs": ["generatedContent"],
                "outputs": ["reviewedContent"]
              }
            ],
            "triggers": ["manual", "scheduled", "api-call"],
            "status": "active"
          },
          {
            "id": "lead-management-workflow",
            "name": "Lead Management Automation",
            "steps": [
              {
                "id": "step-1",
                "name": "Lead Capture",
                "type": "ui.form",
                "component": "LeadCaptureForm",
                "outputs": ["leadData"]
              },
              {
                "id": "step-2",
                "name": "Lead Scoring",
                "type": "ai.scorer",
                "component": "LeadScorer",
                "inputs": ["leadData"],
                "outputs": ["leadScore"]
              },
              {
                "id": "step-3",
                "name": "Auto Response",
                "type": "agent.service",
                "component": "AutoResponder",
                "inputs": ["leadScore"],
                "outputs": ["response"]
              }
            ],
            "triggers": ["form-submission", "api-webhook"],
            "status": "active"
          }
        ]
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-v",
        "requiredTests": [
          {
            "description": "Verify workflow execution progresses through all steps correctly",
            "testType": "e2e-playwright",
            "expectedOutcome": "Workflow completes all steps in sequence with proper data flow between components"
          },
          {
            "description": "Verify error handling and recovery mechanisms work properly",
            "testType": "e2e-playwright",
            "expectedOutcome": "Workflow handles errors gracefully and provides recovery options"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["workflowSuccessRate", "stepLatency", "errorRate"],
          "failureCondition": "workflowSuccessRate < 0.9 OR stepLatency > 5000ms for 10m",
          "repairPrompt": "AI workflow performance degraded. Success rate: {workflowSuccessRate}, Step latency: {stepLatency}ms. Analyze workflow bottlenecks and optimize step execution."
        }
      }
    },
    {
      "id": "node-search-engine",
      "type": "search.universal",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "searchQuery", "dtype": "string", "validationRule": "isNonEmptyString" },
          { "name": "searchFilters", "dtype": "object", "validationRule": "isValidSearchFilters" }
        ],
        "outputs": [
          { "name": "onSearchResults", "dtype": "event" },
          { "name": "onSearchSuggestion", "dtype": "event" }
        ]
      },
      "props": {
        "title": "Universal Search Engine",
        "description": "3D search interface with semantic and visual search capabilities",
        "searchTypes": [
          {
            "id": "semantic-search",
            "name": "Semantic Search",
            "description": "AI-powered semantic understanding of search queries",
            "enabled": true
          },
          {
            "id": "visual-search",
            "name": "Visual Search",
            "description": "Search components by visual similarity and layout",
            "enabled": true
          },
          {
            "id": "code-search",
            "name": "Code Search",
            "description": "Search through component source code and documentation",
            "enabled": true
          }
        ],
        "searchIndex": {
          "components": 75,
          "charts": 22,
          "workflows": 8,
          "documentation": 15
        }
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-iii",
        "requiredTests": [
          {
            "description": "Verify search returns relevant results for various query types",
            "testType": "e2e-playwright",
            "expectedOutcome": "Search results are relevant, ranked by relevance, and include proper metadata"
          },
          {
            "description": "Verify search suggestions appear as user types",
            "testType": "e2e-playwright",
            "expectedOutcome": "Search suggestions update in real-time and help guide user queries"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["searchLatency", "resultRelevance", "indexFreshness"],
          "failureCondition": "searchLatency > 1000ms OR resultRelevance < 0.8 for 5m",
          "repairPrompt": "Search engine performance degraded. Latency: {searchLatency}ms, Relevance: {resultRelevance}. Optimize search algorithms and index structure."
        }
      }
    },
    {
      "id": "node-performance-monitor",
      "type": "monitoring.dashboard",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "metricsData", "dtype": "array", "validationRule": "isValidMetricsArray" },
          { "name": "alertThresholds", "dtype": "object", "validationRule": "isValidThresholds" }
        ],
        "outputs": [
          { "name": "onAlertTriggered", "dtype": "event" },
          { "name": "onPerformanceReport", "dtype": "event" }
        ]
      },
      "props": {
        "title": "Performance Monitor",
        "description": "Real-time performance monitoring and alerting system",
        "metrics": [
          {
            "name": "Component Render Time",
            "value": 45,
            "unit": "ms",
            "threshold": 100,
            "status": "healthy"
          },
          {
            "name": "Memory Usage",
            "value": 128,
            "unit": "MB",
            "threshold": 512,
            "status": "healthy"
          },
          {
            "name": "Error Rate",
            "value": 0.02,
            "unit": "%",
            "threshold": 5,
            "status": "healthy"
          },
          {
            "name": "User Satisfaction",
            "value": 4.8,
            "unit": "/5",
            "threshold": 4.0,
            "status": "excellent"
          }
        ],
        "alerts": [
          {
            "id": "high-render-time",
            "condition": "renderTime > 200ms",
            "severity": "warning",
            "enabled": true
          },
          {
            "id": "memory-leak",
            "condition": "memoryUsage > 1GB",
            "severity": "critical",
            "enabled": true
          }
        ]
      },
      "agentDirectives": {
        "constitutionRef": "https://github.com/memorymusicllc/power.components/blob/main/.cursor/Project%20Constitution.md#article-ii",
        "requiredTests": [
          {
            "description": "Verify performance metrics update in real-time",
            "testType": "e2e-playwright",
            "expectedOutcome": "Metrics display current values and update automatically"
          },
          {
            "description": "Verify alerts trigger when thresholds are exceeded",
            "testType": "e2e-playwright",
            "expectedOutcome": "Alerts are triggered and displayed when performance thresholds are breached"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["alertAccuracy", "metricLatency", "systemHealth"],
          "failureCondition": "alertAccuracy < 0.95 OR systemHealth < 0.8 for 5m",
          "repairPrompt": "Performance monitor accuracy degraded. Alert accuracy: {alertAccuracy}, System health: {systemHealth}. Review monitoring logic and thresholds."
        }
      }
    },
    {
      "id": "node-three-layer-showcase",
      "type": "ui.showcase",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "activeLayer", "dtype": "string", "validationRule": "isOneOf:observability,view,scene" },
          { "name": "isAnimating", "dtype": "boolean", "validationRule": "isBoolean" }
        ],
        "outputs": [
          { "name": "layerChanged", "dtype": "event" },
          { "name": "dataUpdated", "dtype": "object" }
        ]
      },
      "props": {
        "title": "Three-Layer Showcase",
        "description": "Demonstrates three distinct layers: Observability (real-time data), View (2D objects), and Scene (3D objects)",
        "activeLayer": "observability",
        "isAnimating": true,
        "showControls": true,
        "enableRealTimeUpdates": true,
        "layers": [
          {
            "id": "observability",
            "name": "Observability Layer",
            "description": "Real-time data monitoring and metrics",
            "icon": "Activity",
            "features": ["Real-time metrics", "Health monitoring", "Event logging", "Performance tracking"]
          },
          {
            "id": "view",
            "name": "2D View Layer", 
            "description": "Interactive 2D objects and visualizations",
            "icon": "Eye",
            "features": ["Network diagrams", "Interactive nodes", "Connection visualization", "Canvas rendering"]
          },
          {
            "id": "scene",
            "name": "3D Scene Layer",
            "description": "3D objects and spatial relationships", 
            "icon": "Cube",
            "features": ["3D objects", "Spatial relationships", "Material properties", "Animation system"]
          }
        ]
      },
      "agentDirectives": {
        "constitutionRef": "pow3r.v3.law.md",
        "requiredTests": [
          {
            "description": "Verify all three layers render correctly",
            "testType": "e2e-playwright",
            "expectedOutcome": "Observability, View, and Scene layers all display properly"
          },
          {
            "description": "Verify layer switching functionality",
            "testType": "e2e-playwright", 
            "expectedOutcome": "Users can switch between layers and content updates correctly"
          },
          {
            "description": "Verify real-time data updates",
            "testType": "e2e-playwright",
            "expectedOutcome": "Observability layer shows live updating metrics"
          },
          {
            "description": "Verify 2D canvas rendering",
            "testType": "e2e-playwright",
            "expectedOutcome": "View layer renders interactive 2D objects on canvas"
          },
          {
            "description": "Verify 3D scene rendering",
            "testType": "e2e-playwright",
            "expectedOutcome": "Scene layer renders 3D objects with animations"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["renderTime", "animationFPS", "dataUpdateFrequency"],
          "failureCondition": "renderTime > 100ms OR animationFPS < 30 OR dataUpdateFrequency < 1Hz",
          "repairPrompt": "Restart animation loop, reset data streams, or fallback to static rendering"
        },
        "xFilesIntegration": {
          "enabled": true,
          "caseFile": "three-layer-showcase-v3",
          "monitoringLevel": "comprehensive",
          "autoDocumentation": true
        }
      },
      "observability": {
        "metrics": {
          "renderTime": {
            "type": "number",
            "unit": "ms",
            "description": "Component render time",
            "target": 16,
            "threshold": 100
          },
          "animationFPS": {
            "type": "number", 
            "unit": "fps",
            "description": "Animation frame rate",
            "target": 60,
            "threshold": 30
          },
          "dataUpdateFrequency": {
            "type": "number",
            "unit": "hz", 
            "description": "Real-time data update frequency",
            "target": 1,
            "threshold": 0.5
          }
        },
        "logging": {
          "level": "info",
          "events": ["layer_switch", "animation_toggle", "data_update", "error"]
        },
        "performance": {
          "targetRenderTime": 16,
          "maxMemoryUsage": 50,
          "optimizationLevel": "high"
        }
      }
    },
    {
      "id": "node-dropdown-component",
      "type": "ui.dropdown",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "options", "dtype": "array", "validationRule": "isArray" },
          { "name": "value", "dtype": "string|array", "validationRule": "isValidValue" },
          { "name": "placeholder", "dtype": "string", "validationRule": "isString" },
          { "name": "searchable", "dtype": "boolean", "validationRule": "isBoolean" },
          { "name": "multiSelect", "dtype": "boolean", "validationRule": "isBoolean" },
          { "name": "variant", "dtype": "string", "validationRule": "isOneOf:default,outline,ghost,filled" },
          { "name": "size", "dtype": "string", "validationRule": "isOneOf:sm,md,lg" }
        ],
        "outputs": [
          { "name": "onChange", "dtype": "function" },
          { "name": "onSearch", "dtype": "function" },
          { "name": "onLoadMore", "dtype": "function" }
        ]
      },
      "props": {
        "title": "Dropdown Component",
        "description": "A comprehensive dropdown component with multiple variants, search, multi-select, and async loading capabilities",
        "placeholder": "Select an option...",
        "searchable": true,
        "multiSelect": false,
        "variant": "default",
        "size": "md",
        "showIcons": true,
        "features": [
          "Single and multi-select",
          "Search functionality",
          "Grouped options",
          "Async loading",
          "Keyboard navigation",
          "Accessibility support",
          "Multiple variants",
          "Custom icons"
        ],
        "variants": [
          {
            "name": "default",
            "description": "Standard dropdown with border"
          },
          {
            "name": "outline",
            "description": "Outlined dropdown with transparent background"
          },
          {
            "name": "ghost",
            "description": "Ghost dropdown with minimal styling"
          },
          {
            "name": "filled",
            "description": "Filled dropdown with background color"
          }
        ],
        "sizes": [
          {
            "name": "sm",
            "description": "Small size for compact layouts"
          },
          {
            "name": "md",
            "description": "Medium size for standard layouts"
          },
          {
            "name": "lg",
            "description": "Large size for prominent selections"
          }
        ]
      },
      "agentDirectives": {
        "constitutionRef": "pow3r.v3.law.md",
        "requiredTests": [
          {
            "description": "Verify dropdown opens and closes correctly",
            "testType": "e2e-playwright",
            "expectedOutcome": "Dropdown opens on click and closes on outside click or escape"
          },
          {
            "description": "Verify search functionality works",
            "testType": "e2e-playwright",
            "expectedOutcome": "Search filters options correctly and shows results"
          },
          {
            "description": "Verify multi-select functionality",
            "testType": "e2e-playwright",
            "expectedOutcome": "Multiple options can be selected and deselected"
          },
          {
            "description": "Verify keyboard navigation",
            "testType": "e2e-playwright",
            "expectedOutcome": "Arrow keys navigate options, Enter selects, Escape closes"
          },
          {
            "description": "Verify accessibility features",
            "testType": "e2e-playwright",
            "expectedOutcome": "Screen reader support and ARIA attributes work correctly"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["renderTime", "searchLatency", "optionCount"],
          "failureCondition": "renderTime > 50ms OR searchLatency > 500ms OR optionCount > 1000",
          "repairPrompt": "Dropdown performance degraded. Render time: {renderTime}ms, Search latency: {searchLatency}ms, Options: {optionCount}. Optimize rendering or implement virtualization."
        },
        "xFilesIntegration": {
          "enabled": true,
          "caseFile": "dropdown-v3",
          "monitoringLevel": "comprehensive",
          "autoDocumentation": true
        }
      },
      "observability": {
        "metrics": {
          "renderTime": {
            "type": "number",
            "unit": "ms",
            "description": "Component render time",
            "target": 16,
            "threshold": 50
          },
          "searchLatency": {
            "type": "number",
            "unit": "ms",
            "description": "Search response time",
            "target": 100,
            "threshold": 500
          },
          "optionCount": {
            "type": "number",
            "unit": "count",
            "description": "Number of options rendered",
            "target": 50,
            "threshold": 1000
          }
        },
        "logging": {
          "level": "info",
          "events": ["selection_change", "search_query", "dropdown_open", "dropdown_close", "error"]
        },
        "performance": {
          "targetRenderTime": 16,
          "maxMemoryUsage": 25,
          "optimizationLevel": "high"
        }
      }
    },
    {
      "id": "node-universal-component-container",
      "type": "universal.container",
      "version": "3.0.0",
      "io": {
        "inputs": [
          { "name": "activeComponentId", "dtype": "string", "validationRule": "isValidComponentId" },
          { "name": "componentData", "dtype": "object", "validationRule": "isObject" },
          { "name": "isExpanded", "dtype": "boolean", "validationRule": "isBoolean" },
          { "name": "viewMode", "dtype": "string", "validationRule": "isOneOf:grid,list" },
          { "name": "autoRotate", "dtype": "boolean", "validationRule": "isBoolean" },
          { "name": "rotationSpeed", "dtype": "number", "validationRule": "isNumber" }
        ],
        "outputs": [
          { "name": "onComponentChange", "dtype": "function" },
          { "name": "onDataUpdate", "dtype": "function" },
          { "name": "onStateChange", "dtype": "function" }
        ]
      },
      "props": {
        "title": "Universal Component Container",
        "description": "A single container that can morph into any of 52 component types by switching data. Eliminates the need for 52 separate components and provides a unified interface.",
        "activeComponentId": "dashboard",
        "componentData": {},
        "isExpanded": false,
        "viewMode": "grid",
        "autoRotate": false,
        "rotationSpeed": 3000,
        "totalComponents": 52,
        "categories": [
          {
            "name": "Dashboard",
            "count": 8,
            "components": ["dashboard", "analytics", "monitoring", "workflow", "database", "server", "cloud", "security"]
          },
          {
            "name": "UI",
            "count": 12,
            "components": ["button", "dropdown", "input", "toggle", "slider", "checkbox", "radio", "select", "textarea", "modal", "tooltip", "popover"]
          },
          {
            "name": "Data",
            "count": 8,
            "components": ["table", "list", "grid", "card", "accordion", "tabs", "stepper", "breadcrumb"]
          },
          {
            "name": "Media",
            "count": 6,
            "components": ["image", "video", "audio", "gallery", "carousel", "lightbox"]
          },
          {
            "name": "Navigation",
            "count": 6,
            "components": ["navbar", "sidebar", "menu", "pagination", "steps", "anchor"]
          },
          {
            "name": "Form",
            "count": 8,
            "components": ["form", "field", "validation", "upload", "datepicker", "timepicker", "colorpicker", "rating"]
          },
          {
            "name": "Layout",
            "count": 4,
            "components": ["container", "flex", "grid", "spacer"]
          }
        ],
        "features": [
          "52 Component Types",
          "State Toggle Interface",
          "Auto-Rotation Mode",
          "Component Morphing",
          "Unified Data Interface",
          "Performance Optimized",
          "Accessibility Support",
          "Constitutional Compliance"
        ]
      },
      "agentDirectives": {
        "constitutionRef": "pow3r.v3.law.md",
        "requiredTests": [
          {
            "description": "Verify all 52 components can be rendered",
            "testType": "e2e-playwright",
            "expectedOutcome": "All component types render correctly when selected"
          },
          {
            "description": "Verify component switching functionality",
            "testType": "e2e-playwright",
            "expectedOutcome": "Components switch smoothly between different types"
          },
          {
            "description": "Verify auto-rotation feature",
            "testType": "e2e-playwright",
            "expectedOutcome": "Auto-rotation cycles through all components at specified speed"
          },
          {
            "description": "Verify state persistence",
            "testType": "e2e-playwright",
            "expectedOutcome": "Component state persists across switches and rotations"
          },
          {
            "description": "Verify performance with all components",
            "testType": "e2e-playwright",
            "expectedOutcome": "Container maintains performance with all 52 component types"
          }
        ],
        "selfHealing": {
          "enabled": true,
          "monitoredMetrics": ["renderTime", "componentSwitchTime", "activeComponentCount"],
          "failureCondition": "renderTime > 50ms OR componentSwitchTime > 500ms OR activeComponentCount > 52",
          "repairPrompt": "Universal container performance degraded. Render time: {renderTime}ms, Switch time: {componentSwitchTime}ms, Components: {activeComponentCount}. Optimize rendering or implement component caching."
        },
        "xFilesIntegration": {
          "enabled": true,
          "caseFile": "universal-component-container-v3",
          "monitoringLevel": "comprehensive",
          "autoDocumentation": true
        }
      },
      "observability": {
        "metrics": {
          "renderTime": {
            "type": "number",
            "unit": "ms",
            "description": "Component render time",
            "target": 16,
            "threshold": 50
          },
          "componentSwitchTime": {
            "type": "number",
            "unit": "ms",
            "description": "Time to switch between components",
            "target": 100,
            "threshold": 500
          },
          "activeComponentCount": {
            "type": "number",
            "unit": "count",
            "description": "Number of components rendered",
            "target": 1,
            "threshold": 52
          }
        },
        "logging": {
          "level": "info",
          "events": ["component_switch", "data_update", "state_change", "auto_rotation", "error"]
        },
        "performance": {
          "targetRenderTime": 16,
          "maxMemoryUsage": 100,
          "optimizationLevel": "high"
        }
      }
    }
  ],
  "edges": [
    {
      "from": { "nodeId": "node-component-showcase", "port": "onComponentSelect" },
      "to": { "nodeId": "node-redux-ui-demo", "port": "componentProps" },
      "type": "data-flow",
      "label": "Component Selection"
    },
    {
      "from": { "nodeId": "node-chart-gallery", "port": "onChartInteraction" },
      "to": { "nodeId": "node-3d-visualization", "port": "sceneData" },
      "type": "visualization-update",
      "label": "Chart to 3D"
    },
    {
      "from": { "nodeId": "node-search-engine", "port": "onSearchResults" },
      "to": { "nodeId": "node-component-showcase", "port": "searchQuery" },
      "type": "search-filter",
      "label": "Search Results"
    },
    {
      "from": { "nodeId": "node-ai-workflows", "port": "onWorkflowComplete" },
      "to": { "nodeId": "node-performance-monitor", "port": "metricsData" },
      "type": "metrics-update",
      "label": "Workflow Metrics"
    },
    {
      "from": { "nodeId": "node-privacy-controls", "port": "onPrivacyViolation" },
      "to": { "nodeId": "node-performance-monitor", "port": "alertThresholds" },
      "type": "security-alert",
      "label": "Privacy Alert"
    },
    {
      "from": { "nodeId": "node-main-dashboard", "port": "onThemeChange" },
      "to": { "nodeId": "node-redux-ui-demo", "port": "theme" },
      "type": "theme-sync",
      "label": "Theme Sync"
    },
    {
      "from": { "nodeId": "node-3d-visualization", "port": "onNodeSelect" },
      "to": { "nodeId": "node-component-showcase", "port": "filterTags" },
      "type": "visual-filter",
      "label": "3D Selection Filter"
    },
    {
      "from": { "nodeId": "node-performance-monitor", "port": "onAlertTriggered" },
      "to": { "nodeId": "node-ai-workflows", "port": "triggerEvent" },
      "type": "auto-remediation",
      "label": "Auto-Healing Trigger"
    }
  ]
}
